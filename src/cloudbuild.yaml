# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  # Debug: Verify directory structure
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args: ['-c', 'ls -la']
    id: 'list-root'

  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args: ['-c', 'ls -la src']
    id: 'list-src'
    waitFor: ['list-root']

  # Authenticate Docker with Artifact Registry
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args: ['-c', 'gcloud auth configure-docker europe-west1-docker.pkg.dev']
    id: 'docker-auth'
    waitFor: ['list-src']

  # Build frontend image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'europe-west1-docker.pkg.dev/dreamdev-team1/dreamdev-team1-repo/frontend:$COMMIT_SHA'
      - '.'
      - '--cache-from=europe-west1-docker.pkg.dev/dreamdev-team1/dreamdev-team1-repo/frontend:latest'
    dir: 'src/frontend'
    id: 'build-frontend'
    waitFor: ['docker-auth']

  # Build userservice image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'europe-west1-docker.pkg.dev/dreamdev-team1/dreamdev-team1-repo/userservice:$COMMIT_SHA'
      - '.'
      - '--cache-from=europe-west1-docker.pkg.dev/dreamdev-team1/dreamdev-team1-repo/userservice:latest'
    dir: 'src/accounts/userservice'
    id: 'build-userservice'
    waitFor: ['docker-auth']

  # Build loadgenerator image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'europe-west1-docker.pkg.dev/dreamdev-team1/dreamdev-team1-repo/loadgenerator:$COMMIT_SHA'
      - '.'
      - '--cache-from=europe-west1-docker.pkg.dev/dreamdev-team1/dreamdev-team1-repo/loadgenerator:latest'
    dir: 'src/loadgenerator'
    id: 'build-loadgenerator'
    waitFor: ['docker-auth']

  # Conditional ledgerwriter build
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [ -d "src/ledgerwriter" ]; then
          docker build \
            -t europe-west1-docker.pkg.dev/dreamdev-team1/dreamdev-team1-repo/ledgerwriter:$COMMIT_SHA \
            -f src/ledgerwriter/Dockerfile .
        else
          echo "Skipping ledgerwriter build - directory not found"
          exit 0
        fi
    id: 'build-ledgerwriter'
    waitFor: ['docker-auth']

  # Push frontend image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'push'
      - 'europe-west1-docker.pkg.dev/dreamdev-team1/dreamdev-team1-repo/frontend:$COMMIT_SHA'
    waitFor: ['build-frontend']

  # Push userservice image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'push'
      - 'europe-west1-docker.pkg.dev/dreamdev-team1/dreamdev-team1-repo/userservice:$COMMIT_SHA'
    waitFor: ['build-userservice']

  # Push loadgenerator image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'push'
      - 'europe-west1-docker.pkg.dev/dreamdev-team1/dreamdev-team1-repo/loadgenerator:$COMMIT_SHA'
    waitFor: ['build-loadgenerator']

  # Configure GKE access
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'container'
      - 'clusters'
      - 'get-credentials'
      - 'dreamdev-team1-cluster'
      - '--zone=europe-west1-b'
      - '--project=dreamdev-team1'
    id: 'get-credentials'
    waitFor: ['-']

  # Update frontend deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/frontend'
      - 'front=europe-west1-docker.pkg.dev/dreamdev-team1/dreamdev-team1-repo/frontend:$COMMIT_SHA'
    waitFor: ['get-credentials', 'build-frontend']
    id: 'update-frontend'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=europe-west1-b'
      - 'CLOUDSDK_CONTAINER_CLUSTER=dreamdev-team1-cluster'

  # Update userservice deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'set'
      - 'image'
      - 'deployment/userservice'
      - 'userservice=europe-west1-docker.pkg.dev/dreamdev-team1/dreamdev-team1-repo/userservice:$COMMIT_SHA'
    waitFor: ['get-credentials', 'build-userservice']
    id: 'update-userservice'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=europe-west1-b'
      - 'CLOUDSDK_CONTAINER_CLUSTER=dreamdev-team1-cluster'

  # Update loadgenerator deployment
  # - name: 'gcr.io/cloud-builders/kubectl'
  #   args:
  #     - 'set'
  #     - 'image'
  #     - 'deployment/loadgenerator'
  #     - 'loadgenerator=europe-west1-docker.pkg.dev/dreamdev-team1/dreamdev-team1-repo/loadgenerator:$COMMIT_SHA'
  #   waitFor: ['get-credentials', 'build-loadgenerator']
  #   id: 'update-loadgenerator'
  #   env:
  #     - 'CLOUDSDK_COMPUTE_REGION=europe-west1-b'
  #     - 'CLOUDSDK_CONTAINER_CLUSTER=dreamdev-team1-cluster'

  # Verify deployments
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['rollout', 'status', 'deployment/frontend', '--timeout=3m']
    waitFor: ['update-frontend']
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['rollout', 'status', 'deployment/userservice', '--timeout=3m']
    waitFor: ['update-userservice']
  # - name: 'gcr.io/cloud-builders/kubectl'
  #   args: ['rollout', 'status', 'deployment/loadgenerator', '--timeout=3m']
  #   waitFor: ['update-loadgenerator']

images:
  - 'europe-west1-docker.pkg.dev/dreamdev-team1/dreamdev-team1-repo/frontend:$COMMIT_SHA'
  - 'europe-west1-docker.pkg.dev/dreamdev-team1/dreamdev-team1-repo/userservice:$COMMIT_SHA'
  - 'europe-west1-docker.pkg.dev/dreamdev-team1/dreamdev-team1-repo/loadgenerator:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
  